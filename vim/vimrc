set nocompatible

" config path
let configpath=fnamemodify(expand('$MYVIMRC'), ':p:h')

if has('termguicolors')
  set termguicolors
endif

set history=500

set encoding=utf8
set ffs=unix,dos,mac
if has("mac")
  set clipboard+=unnamed
else
  set clipboard+=unnamedplus
endif


" syntax enable
syntax on
"set number relativenumber
set whichwrap+=<,>,h,l
set ignorecase
set smartcase
set hlsearch
set incsearch
set magic
set showmatch
set mat=2
set noswapfile
set nowritebackup
set expandtab
set smarttab
set shiftwidth=2
set tabstop=2
set omnifunc=syntaxcomplete#Complete
set listchars=tab:»·,nbsp:+,trail:·,extends:→,precedes:←
set backspace=indent,eol,start
set mouse=nvic " mouse
set wildmenu

set ai "Auto indent
set si "Smart indent
set wrap "Wrap lines

" Get termguicolors to work on st
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

" tabline
set showtabline=0

" statusline
set laststatus=2
set statusline=
set statusline +=%4*\ %<%F%*              "full path
set statusline +=%1*\ [%n]\ %*            "buffer number
set statusline +=%1*[%{tabpagenr()}]\ %*  "tab number
set statusline +=%2*%m%*                  "modified flag
set statusline +=%1*%=%5l%*               "current line
set statusline +=%1*%4v\ %*               "virtual column number
set statusline +=%2*/%L%*                 "total lines

if has("persistent_undo")
  let target_path = expand(configpath . "/.undo")

  " if the location does not exist.
  if !isdirectory(target_path)
      call mkdir(target_path, "p", 0700)
  endif

  let &undodir=target_path
  set undofile
endif


""""" Map
vmap < <gv
vmap > >gv
vmap gy "+y
vmap gY "+Y
vmap <C-a> <C-a>gv
vmap <C-x> <C-x>gv
imap <C-l> <C-x><C-f>
nmap gy "+y
nmap gY "+Y
nmap gp "+p
nmap gP "+P
nmap <Space>q :q<CR>
nmap <Space>e :Ex<CR>
nmap <Leader>1 :tabnext 1<CR>
nmap <Leader>2 :tabnext 2<CR>
nmap <Leader>3 :tabnext 3<CR>
nmap <Leader>4 :tabnext 4<CR>
nmap <Leader>5 :tabnext 5<CR>
nmap <Leader>6 :tabnext 6<CR>
nmap <Leader>7 :tabnext 7<CR>
nmap <Leader>8 :tabnext 8<CR>
nmap <Leader>9 :tabnext 9<CR>
nmap <Leader>e :tabe<CR>
